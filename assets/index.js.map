{"version":3,"sources":["../scripts/index.js"],"names":[],"mappings":";;;;;;AAAA,IAAM,UAAU,kEAAV;AACN,IAAM,aAAa,CAAb;;;;IAGA;;;oCACmB;AACrB,UAAM,eAAe,SAAf,YAAe,CAAC,OAAD,EAAa;AAChC,YAAM,OAAO,QAAQ,IAAR,CAAa,QAAb,CADmB;AAEhC,eAAO,MAAM,GAAN,GAAY,KAAK,GAAL,CAAS;iBAAY,IAAI,KAAJ,CAAU,QAAV,EAAoB,UAApB;SAAZ,CAArB,CAFyB;OAAb,CADA;;AAMrB,aAAO,MACJ,GADI,2CACwC,OADxC,EAEJ,IAFI,CAEC,YAFD,CAAP,CANqB;;;;AAWvB,WAZI,KAYJ,CAAY,IAAZ,EAAkB,UAAlB,EAA8B;0BAZ1B,OAY0B;;AAC5B,SAAK,KAAL,GAAa,KAAK,KAAL;;AADe,QAG5B,CAAK,MAAL,GAAc,IACZ,CAAK,UAAL,IACA,KAAK,UAAL,CAAgB,MAAhB,IACA,KAAK,UAAL,CAAgB,UAAhB,CAFA,IAGA,KAAK,UAAL,CAAgB,UAAhB,EAA4B,GAA5B,IACG,uBALS,CAHc;GAA9B;;SAZI;;;;;;IAyBA;AACJ,WADI,SACJ,CAAY,MAAZ,EAAoB,WAApB,EAAiC;0BAD7B,WAC6B;;AAC/B,SAAK,MAAL,GAAc,MAAd,CAD+B;AAE/B,SAAK,kBAAL,GAA0B,SAAS,cAAT,CAAwB,WAAxB,CAA1B,CAF+B;GAAjC;;eADI;;6BAMK;AACP,UAAM,aAAa,KAAK,MAAL,CAAY,GAAZ,CAAgB;6FAEG,MAAM,MAAN,4CACV,MAAM,KAAN;OAHO,CAA7B,CADC;;AAQP,WAAK,kBAAL,CAAwB,SAAxB,GAAoC,WAAW,IAAX,CAAgB,EAAhB,CAApC,CARO;;;;SANL;;;;;;IAmBA,gBACJ,SADI,aACJ,CAAY,OAAZ,EAAqB;;;wBADjB,eACiB;;AACnB,OAAK,OAAL,GAAe,OAAf,CADmB;;AAGnB,SAAO,MAAM,aAAN,GACJ,IADI,CACC,kBAAU;AACd,UAAK,MAAL,GAAc,MAAd,CADc;AAEd,UAAK,IAAL,GAAY,IAAI,SAAJ,CAAc,MAAK,MAAL,EAAa,MAAK,OAAL,CAAvC,CAFc;AAGd,UAAK,IAAL,CAAU,MAAV,GAHc;GAAV,CADR,CAHmB;CAArB;;AAYF,OAAO,MAAP,GAAgB;SAAM,IAAI,aAAJ,CAAkB,qBAAlB;CAAN","file":"index.js","sourcesContent":["const API_KEY = 'H7CF2IHbEc6QIrMVwb2zfd9VI14HHGAfYax1eHEUsJ4voYuqWF2oWvByUOhERva_';\nconst imgQuality = 1;\n\n// Model\nclass Video {\n  static requestVideos() {\n    const formatVideos = (payload) => {\n      const data = payload.data.response;\n      return Video.all = data.map(videoObj => new Video(videoObj, imgQuality));\n    }\n\n    return axios\n      .get(`https://api.zype.com/videos/?api_key=${API_KEY}`)\n      .then(formatVideos);\n  }\n\n  constructor(data, imgQuality) {\n    this.title = data.title;\n    // Could be cleaned up with lodash's `get` function\n    this.imgUrl = (\n      data.thumbnails &&\n      data.thumbnails.length &&\n      data.thumbnails[imgQuality] &&\n      data.thumbnails[imgQuality].url\n    ) || 'default-thumbnail.png';\n  }\n}\n\n// View\nclass Thumnails {\n  constructor(videos, containerId) {\n    this.videos = videos;\n    this.thumbnailContainer = document.getElementById(containerId);\n  }\n\n  render() {\n    const thumbnails = this.videos.map(video => `\n      <div class=\"thumbnail\">\n        <img class=\"thumbnail-img\" src=\"${video.imgUrl}\" />\n        <span class=\"caption\">${video.title}</span>\n      </div>\n    `);\n\n    this.thumbnailContainer.innerHTML = thumbnails.join('');\n  }\n}\n\n// Controller\nclass ThumbnailPage {\n  constructor(mountId) {\n    this.mountId = mountId;\n\n    return Video.requestVideos()\n      .then(videos => {\n        this.videos = videos;\n        this.view = new Thumnails(this.videos, this.mountId);\n        this.view.render();\n      });\n  }\n}\n\nwindow.onload = () => new ThumbnailPage('thumbnail-container');\n"]}